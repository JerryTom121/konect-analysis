#! /usr/bin/perl
#
# Print Bibtex for the given target. 
#
# INVOCATION
#
#	$0 <network|konect>
#

use strict;
use warnings;

use lib "./lib";

use Switch;
use IO::File;
use BibTeX::Parser;

my $networkname = $ARGV[0];
my $name;

my $ID = "";

my $konectproject = "../kunegis/projects/konect";

unless ($networkname eq "konect") {
	open my $F_IN,"<uni/meta.$networkname" or die "$!";

	while (my $line = <$F_IN>) {
		if ($line=~/\s*name\s*:\s*(.*)\s*$/){
			unless (defined($name)){
				$name=$1;
			}
		}
		if ($line=~/\s*fullname\s*:\s*(.*)\s*$/){
			$name=$1;
		}
		if ($line=~/\s*cite\s*:\s(.*)\s*$/){
			$ID=$1;
		}
	}
	close $F_IN or die "$!";
}



sub getkonectcite {
    my $networkname = shift;
    my ( $sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst ) =
      localtime();
    $year += 1900;
    my @bibm  = qw(jan feb mar apr may jun jul aug sep oct nov dec);
    my $month = $bibm[$mon];
    return '@MISC{konect:' . $year . ':' . $networkname . ",
    title = {"
      . $name
      . " network dataset -- {KONECT}},
    month = $month,
    year = {$year},
    url = {http://konect.uni-koblenz.de/networks/$networkname}
}
";

}

my $bibstring = "";
my $bibsrc   = "";

my $refdir = "$konectproject/handbook/";
opendir(IN, $refdir ) or die "$! :$refdir";
my @ref_files = readdir(IN);
closedir IN or die "$! :$refdir";

foreach my $ref_file (@ref_files) {
	$ref_file = $refdir . "/" . $ref_file;
}

if ( -e "$konectproject/extr/konect.bib" ) {
	push( @ref_files, "$konectproject/extr/konect.bib" )
	    ;    #for the future existence of that file 
}

$ID =~ s/ //g;
$ID =~ s/,/|/g;
if ( length($ID) == 0 ) { $ID = $networkname; }
$ID = "($ID)";

unless ( $networkname eq "konect" ) {
	# TODO where is this read?
	$bibsrc = getkonectcite($networkname) . "\n";
}


foreach my $ref_file (@ref_files) {

    if ( $ref_file =~ /\.bib$/ ) {

        my $fh     = IO::File->new($ref_file);
        my $parser = BibTeX::Parser->new($fh);
        while ( my $entry = $parser->next ) {
            if (   ( length($ID) > 0 )
                && ( $entry->parse_ok )
                && ( $entry->key =~ /^$ID$/i ) )
            {

                $bibsrc .= $entry->raw_bibtex() . "\n\n";

            } elsif (!($entry->parse_ok)){
	           warn "Error parsing file: " . $entry->error;
	    }									             
        }
    }
}

print $bibsrc;
