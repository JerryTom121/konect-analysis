#! /bin/sh
#
# Show the currently running MATLAB processes started with ./matlab.
# This calls ps(1) and presents the results in a nice way.   
#
# MECHANISM 
#
# To show the time left for a task, a program outputs, at regular
# intervals, strings of the form
#
#     [TIMESPEC left]
#
# where TIMESPEC is the time left in free form.  The string does not
# need to be alone on a line. 
#

# Format for the printf(1) command
format='%4s %10s %11s %14s %s\n'

# Header line
printf "$format" "%CPU" "Mem [k]" "Runtime" "Time left" "Log"

TMPDIR="${TMPDIR-/tmp}"
TMPDIR_esc="$(echo "$TMPDIR" | sed -E -e 's,/,\\/,g')"
## echo "TMPDIR_esc='$TMPDIR_esc'"

# Note:  'ps -C' is not POSIX-compliant.

ps k-cputime \
  -o %cpu,cputime,vsize,user,command | 
##  -C MATLAB,octave,julia  
sed -E -e '1d;/'"$TMPDIR_esc"'/!d' |
##grep -v '%CPU' |
while IFS= read -r line
do
	cpu="$(echo "$line" | sed -E -e 's,^\s*(\S+)\s.*$,\1,;s,\.[0-9]$,,')" 
	time="$(echo "$line" | sed -E -e 's,^\s*,,' | cut -f 2 -d ' ')"
	vsize="$(echo "$line" | sed -E -e 's,^\s*,,' | cut -f 3 -d ' ')"
##	echo >&2 "line='$line'"
	logfile="$(echo "$line" | sed -E -e 's,^.*\s('"$TMPDIR_esc"'\S+).*$,\1,')"
##	logfile="$(echo "$line" | sed -E -e 's,^.*\s(\S+\.log)\s.*$,\1,;s,^.*\s(julia .*)$,\1,;s,^\S+\s+\S+\s+\S+\s+\S+\s+(.*)$,\1,')"
##	echo >&2 "logfile='$logfile'"
	if expr "$logfile" : '.*\.log' >/dev/null ; then
		left="$(tac "$logfile" | sed -E -e '/left]/!d;s,^.*\[(.*) left\].*$,\1,;q')"
	else
		left=
##		logfile="user=$(echo "$line" | cut -f 4 -d ' ')"
	fi
##	[ -z "$left" ] && left=" "
	
	printf "$format" "$cpu" "$vsize" "$time" "$left" "$logfile"
done				
